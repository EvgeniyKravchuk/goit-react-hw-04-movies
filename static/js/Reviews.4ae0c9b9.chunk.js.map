{"version":3,"sources":["components/MovieDetailsPage/Reviews.jsx"],"names":["Review","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviewsById","then","response","data","results","map","id","author","content","created_at"],"mappings":"iQAKe,SAASA,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAYC,cAAZD,QASR,OAPAE,qBAAU,WACRC,YAAsBH,GAASI,MAAK,SAACC,GACnCN,EAAW,YAAIM,EAASC,KAAKC,eAG9B,IAGD,cAAC,IAAD,UACGT,EAAQU,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACnC,OACE,+BACE,+BAAKF,EAAL,OACA,4BAAIC,IACJ,4BAAIC,MAHGH","file":"static/js/Reviews.4ae0c9b9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { List } from \"./MovieDetailsPage.styled.jsx\";\nimport { fetchMovieReviewsById } from \"../../General/fetchOptions\";\n\nexport default function Review() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviewsById(movieId).then((response) => {\n      setReviews([...response.data.results]);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <List>\n      {reviews.map(({ id, author, content, created_at }) => {\n        return (\n          <li key={id}>\n            <h2>{author}:</h2>\n            <p>{content}</p>\n            <p>{created_at}</p>\n          </li>\n        );\n      })}\n    </List>\n  );\n}\n"],"sourceRoot":""}